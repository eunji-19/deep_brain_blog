{"version":3,"sources":["store/store.ts","config.ts","services/account-service.ts","page/header.tsx","utils.ts","services/board-service.ts","page/board.tsx","page/board-write.tsx","page/board-content.tsx","page/admin/listItem.tsx","page/admin/boardadmin.tsx","page/admin/admin.tsx","page/layout.tsx","page/login.tsx","page/register.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["globalStore","userName","setUserName","name","makeObservable","observable","action","process","AccountService","sessionStorage","getItem","accessToken","this","getAccessToken","checkAccessToken","axios","get","config","headers","catch","error","console","log","response","res","data","user","post","email","password","token","setItem","type","message","inject","observer","navigate","useNavigate","routeChange","url","a","accountService","getProfile","result","useEffect","loadProfile","Box","m","display","justifyContent","alignItems","color","fontSize","Button","variant","size","startIcon","onClick","removeItem","dateFormatter","date","d","year","undefined","toISOString","Date","getFullYear","month","getMonth","toString","padStart","day","getDate","BoardService","formData","board","useState","boardList","setBoardList","boardService","find","sort","b","aDate","getTime","loadBoardList","style","width","flexDirection","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","i","cursor","num","imageFile","src","alt","height","title","userinfo","count","Pagination","defaultPage","siblingCount","TextField","rows","placeholder","InputProps","padding","useStyles","makeStyles","theme","paper","marginTop","spacing","form","submit","margin","BoardWrite","classes","content","setBoard","file","setFile","alert","FormData","append","uploadImage","write","Container","component","maxWidth","className","noValidate","method","fullWidth","label","autoFocus","value","onChange","e","tempBoard","target","multiline","minWidth","accept","files","split","length","BoardContent","border","borderRadius","textAlign","marginLeft","listItems","ListItem","button","ListItemIcon","ListItemText","primary","BoardAdmin","align","Admin","List","Layout","path","element","Login","setEmail","setPassword","setError","login","Typography","required","Register","adminlevel","setUser","passwordCheck","setPasswordCheck","register","tempUser","App","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2fdef51.chunk.js","sourcesContent":["import { makeObservable, observable, action } from 'mobx';\r\n//import { observer } from 'mobx-react';\r\n\r\nclass GlobalStore {\r\n    userName: string = ''; //로그인 계정 이름.\r\n\r\n    setUserName = (name: string) => {\r\n        this.userName = name;\r\n    }\r\n}\r\n\r\nconst globalStore: GlobalStore = new GlobalStore();\r\n\r\n//위에 선언한 내용의 변화를 감시한다.\r\nmakeObservable(globalStore, {\r\n    userName: observable,\r\n    setUserName: action,\r\n});\r\nexport default globalStore;","export default {\r\n    apiServer: process.env.REACT_APP_BACKEND_URL\r\n}\r\n//  apiServer: process.env.BACK_URL\r\n// apiServer: 'http://backend:5000'","import axios from 'axios';\r\nimport { User } from '../model/user';\r\nimport config from '../config';\r\n\r\nexport default class AccountService {\r\n    public getAccessToken() {\r\n        return sessionStorage.getItem('accessToken');\r\n    }\r\n\r\n    //프로필 요청.\r\n    public async getProfile() {\r\n        const accessToken = this.getAccessToken();\r\n        const checkAccessToken = accessToken !== null ? accessToken : '';\r\n\r\n        const res = await axios.get(\r\n            config.apiServer + '/account/profile', \r\n            { \r\n                headers: {\r\n                    'x-access-token': checkAccessToken\r\n                }\r\n            }\r\n        ).catch(function (error) {\r\n            console.log(error);\r\n          if (error.response) {\r\n            return error.response;\r\n          }\r\n        });\r\n        \r\n        return res.data;\r\n    }\r\n\r\n    //가입 요청.\r\n    public async register(user: User) {\r\n        const res = await axios.post(\r\n            config.apiServer + '/account/register', \r\n            user\r\n        ).catch(function (error) {\r\n            console.log(error);\r\n          if (error.response) {\r\n            return error.response;\r\n          }\r\n        });\r\n        \r\n        return res.data;\r\n    }\r\n\r\n    //로그인 요청.\r\n    public async login(email: string, password: string) {\r\n        try{\r\n            const res = await axios.post(\r\n                config.apiServer + '/account/login', \r\n                {email: email, password: password}\r\n            );\r\n\r\n            if(res.data) {\r\n                let token: string = res.data['token'];\r\n\r\n                //얻어온 토큰을 세션 스토리지에 보관.\r\n                sessionStorage.setItem(\"accessToken\", token);\r\n\r\n                return {\r\n                    type: 'success',\r\n                    name: res.data['name'],\r\n                    message: token,\r\n                }\r\n            }\r\n            \r\n            return {\r\n                type: 'error',\r\n                message: 'no token'\r\n            }\r\n        }catch(error) {\r\n            console.log(error);\r\n            return { \r\n                type: 'error',\r\n                message: 'error.response.data'\r\n            };\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from \"@material-ui/core/Button\"\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\n\r\nimport globalStore from '../store/store';\r\nimport AccountService from '../services/account-service';\r\n\r\nfunction Header() {\r\n    const navigate = useNavigate();\r\n\r\n\tconst routeChange = (url: string) => {\r\n\t\tnavigate(url);\r\n    }\r\n\r\n    async function loadProfile() {\r\n        const accountService = new AccountService();\r\n        const result = await accountService.getProfile();\r\n        \r\n        if(result['name']) {\r\n            globalStore.setUserName(result['name']);\r\n        }\r\n    }\r\n\r\n    function logout() {\r\n        if (!sessionStorage.getItem(\"accessToken\")) {\r\n            return;\r\n        }\r\n      \r\n        sessionStorage.removeItem(\"accessToken\");\r\n        globalStore.setUserName('');\r\n        routeChange('/');\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadProfile();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Box m={1}/>\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n                {globalStore.userName !== '' ? \r\n                    <>\r\n                    <Box color={\"#707070\"} fontSize={14}>\r\n                        {globalStore.userName}님, 환영합니다!\r\n                    </Box>\r\n                    <Box m={1}/>\r\n                    <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<ExitToAppOutlinedIcon/>} onClick={() => logout()}>로그아웃</Button>\r\n                    <Box m={1}/>\r\n                    <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<SupervisorAccountIcon/>} onClick={() => routeChange('/admin')}>관리자모드</Button>\r\n                    <Box m={1}/>\r\n                    </> :\r\n                    <>\r\n                    <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<LockOpenIcon/>} onClick={() => routeChange('/login')}>로그인</Button>\r\n                    <Box m={1}/>\r\n                    <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<PostAddIcon/>} onClick={() => routeChange('/register')}>회원가입</Button>\r\n                    <Box m={1}/>\r\n                    </>\r\n                }\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\n//export default Header;\r\n\r\nexport default inject(({ globalStore }) => ({\r\n    userName: globalStore.userName,\r\n}))(observer(Header));","function dateFormatter(date: Date | string) {\r\n    let d: Date;\r\n    if ((date as Date).toISOString === undefined) {\r\n      d = new Date(date);\r\n    } else {\r\n      d = date as Date;\r\n    }\r\n    const year = d.getFullYear();\r\n    const month = (d.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = d.getDate().toString().padStart(2, '0');\r\n    return `${year}.${month}.${day}.`;\r\n}\r\n\r\nexport { dateFormatter };","import axios from 'axios';\r\nimport { Board } from '../model/board';\r\nimport config from '../config';\r\n\r\nexport default class BoardService {\r\n    public getAccessToken() {\r\n        return sessionStorage.getItem('accessToken');\r\n    }\r\n\r\n    //글 목록 요청.\r\n    public async find() {\r\n        const accessToken = this.getAccessToken();\r\n        const checkAccessToken = accessToken !== null ? accessToken : '';\r\n\r\n        const res = await axios.post(\r\n            config.apiServer + '/board/list', \r\n            {},\r\n            { \r\n                headers: {\r\n                    'x-access-token': checkAccessToken\r\n                }\r\n            }\r\n        ).catch(function (error) {\r\n            console.log(error);\r\n            if (error.response) {\r\n              return error;\r\n            }\r\n        });\r\n        \r\n        return res.data as Board[];\r\n    }\r\n\r\n    //이미지 업로드 요청.\r\n    public async uploadImage(formData: FormData) {\r\n        const accessToken = this.getAccessToken();\r\n        const checkAccessToken = accessToken !== null ? accessToken : '';\r\n\r\n        console.log(formData);\r\n        const res = await axios.post(\r\n            config.apiServer + '/board/uploadImage', \r\n            formData,\r\n            { \r\n                headers: {\r\n                    'x-access-token': checkAccessToken\r\n                }\r\n            }\r\n        ).catch(function (error) {\r\n            console.log(error);\r\n          if (error.response) {\r\n            return error.response;\r\n          }\r\n        });\r\n        \r\n        return res.data;\r\n    }\r\n\r\n    //글쓰기 요청.\r\n    public async write(board: Board) {\r\n        const accessToken = this.getAccessToken();\r\n        const checkAccessToken = accessToken !== null ? accessToken : '';\r\n\r\n        const res = await axios.post(\r\n            config.apiServer + '/board/write', \r\n            board,\r\n            { \r\n                headers: {\r\n                    'x-access-token': checkAccessToken\r\n                }\r\n            }\r\n        ).catch(function (error) {\r\n            console.log(error);\r\n          if (error.response) {\r\n            return error.response;\r\n          }\r\n        });\r\n        \r\n        return res.data;\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n//import TableFooter from '@material-ui/core/TableFooter';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\n\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n//import { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { dateFormatter } from '../utils';\r\nimport globalStore from '../store/store';\r\nimport BoardService from '../services/board-service';\r\nimport { Board as BoardModel } from '../model/board';\r\n\r\nimport config from '../config';\r\n\r\n// const styles = {\r\n//   input1: {\r\n//     height: 50\r\n//   },\r\n//   input2: {\r\n//     height: 200,\r\n//     fontSize: \"3em\"\r\n//   }\r\n// };\r\n\r\n// const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\r\n// };\r\n\r\n// const handleChangeRowsPerPage = (event: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>) => {\r\n\t\r\n// };\r\n\r\nfunction Board() {\r\n\tconst height = 30;\r\n\tconst navigate = useNavigate();\r\n\tconst [boardList, setBoardList] = useState<any[]>([]);\r\n\r\n\tconst routeChange = (url: string) => {\r\n\t\tnavigate(url);\r\n\t}\r\n\r\n\tfunction onClickItem(num: number) {\r\n\t\trouteChange('/board_content?num=' + num);\r\n\t}\r\n\r\n\tasync function loadBoardList() {\r\n        const boardService = new BoardService();\r\n        const result: BoardModel[] = await boardService.find();\r\n\t\t\r\n        if(result) {\r\n\t\t\tresult.sort((a: BoardModel, b: BoardModel) => {\r\n\t\t\t\tif(a.date && b.date){\r\n\t\t\t\t\tconst aDate = new Date(a.date).getTime();\r\n\t\t\t\t\tconst bDate = new Date(b.date).getTime();\r\n\t\t\t\t\treturn bDate - aDate;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\t\t\tsetBoardList(result);\r\n        }\r\n\t}\r\n\t\r\n\tuseEffect(() => {\r\n        loadBoardList();\r\n    }, []);\r\n\r\n\treturn(\r\n\t\t<div style={{width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\r\n\t\t\t<div style={{width: '90%'}}>\r\n\t\t\t\t<TableContainer>\r\n\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>번호</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell>이미지</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell>상품명</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell>작성자</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell>날짜</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell>조회수</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{boardList.map((data, i) => (\r\n\t\t\t\t\t\t\t\t<TableRow style={{cursor: 'pointer'}} key={i} onClick={() => onClickItem(0)}>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{data.num}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{data.imageFile && <img src={config.apiServer + '/uploads/' + data.imageFile} alt=\" \" width=\"50px\" height=\"50px\"  />}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{data.title}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{data.userinfo[0].name}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{data.date && dateFormatter(data.date)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{data.count}</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</TableContainer>\r\n\t\t\t\t<Box m={2}/>\r\n\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\">\r\n\t\t\t\t\t<Box m={1}/>\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<Pagination count={11} defaultPage={1} siblingCount={0} variant=\"outlined\" color=\"primary\"/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box display=\"flex\">\r\n\t\t\t\t\t\t{globalStore.userName !== '' &&\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<CreateIcon/>} onClick={() => routeChange('/board_write')}>\r\n\t\t\t\t\t\t\t\t글쓰기\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<Box m={1}/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box m={2}/>\r\n\t\t\t\t<Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" height=\"30px\">\r\n\t\t\t\t\t<TextField variant=\"outlined\" rows={1} placeholder=\"검색어를 입력해주세요\" InputProps={{style: {height, padding: '0 14px'}}}/>\r\n\t\t\t\t\t<Box m={1}/>\r\n\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" size=\"small\">검색</Button>\r\n\t\t\t\t</Box>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n//export default Board;\r\nexport default inject(({ globalStore }) => ({\r\n    userName: globalStore.userName,\r\n}))(observer(Board));","import React, { useState } from 'react';\r\n\r\n// v5 react-router-dom\r\n// import { useHistory } from 'react-router-dom';\r\n// https://www.digitalocean.com/community/tutorials/react-react-router-v6\r\n// https://stackoverflow.com/questions/65948671/how-to-go-back-to-previous-route-in-react-router-dom-v6\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\n// import TextareaAutosize from \"@material-ui/core/TextareaAutosize\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nimport BoardService from '../services/board-service';\r\nimport { Board } from '../model/board';\r\n// import Axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t  marginTop: theme.spacing(8),\r\n\t  display: 'flex',\r\n\t  flexDirection: 'column',\r\n\t  alignItems: 'center',\r\n\t},\r\n\tform: {\r\n\t  width: '100%', // Fix IE 11 issue.\r\n\t  marginTop: theme.spacing(1),\r\n\t},\r\n\tsubmit: {\r\n\t  margin: theme.spacing(1.5, 0, 0),\r\n\t},\r\n  }));\r\n\r\nfunction BoardWrite() {\r\n\tconst navigate = useNavigate();\r\n\tconst classes = useStyles();\r\n\tconst [board, setBoard] = useState<Board>({title: '', content: '', imageFile: ''});\r\n\tconst [file, setFile] = useState<any>(null);\r\n\r\n\tasync function onSubmit() {\r\n\t\tif(board.title === '' || board.content === '') {\r\n\t\t\talert('입력되지 않은 정보가 있습니다.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst boardService = new BoardService();\t\t\r\n\r\n\t\t//이미지 업로드.\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"file\", file); \r\n\t\t\r\n\t\t// const fileResult = await boardService.uploadImage(formData);\r\n\t\tawait boardService.uploadImage(formData);\r\n\r\n\t\tconst result = await boardService.write(board);\r\n\t\tif(result === 'success') {\r\n\t\t\tnavigate('/board');\r\n\t\t}else{\r\n\t\t\talert('등록 중 오류가 발생하였습니다.');\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<Container component=\"main\" maxWidth=\"md\">\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t<form className={classes.form} noValidate method='post'>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tlabel=\"상품명\"\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\tvalue={board.title}\r\n\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\tlet tempBoard = {...board};\r\n\t\t\t\t\t\ttempBoard.title = e.target.value;\r\n\t\t\t\t\t\tsetBoard(tempBoard);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tmargin=\"normal\"\r\n                    multiline\r\n                    rows={15}\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tlabel=\"내용을 입력하세요.\"\r\n\t\t\t\t\tvalue={board.content}\r\n\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\tlet tempBoard = {...board};\r\n\t\t\t\t\t\ttempBoard.content = e.target.value;\r\n\t\t\t\t\t\tsetBoard(tempBoard);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Box display='flex' flexDirection='row'>\r\n\t\t\t\t\t<Button variant=\"contained\" component=\"label\" style={{minWidth: '100px'}}>파일 선택\r\n\t\t\t\t\t\t<input type=\"file\" accept=\"image/*\" style={{ display: 'none' }} \r\n\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\tif(e.target.files) \r\n\t\t\t\t\t\t\t\t\tsetFile(e.target.files[0]);\r\n\r\n\t\t\t\t\t\t\t\t\tlet tempBoard = {...board};\r\n\t\t\t\t\t\t\t\t\ttempBoard.imageFile = e.target.value.split('\\\\')[e.target.value.split('\\\\').length - 1];\r\n\t\t\t\t\t\t\t\t\tsetBoard(tempBoard);\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tvalue={board.imageFile}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t\t{/*}\r\n                <TextField\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\taccep\r\n                    type=\"file\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvalue={board.imageFile}\r\n\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\tlet tempBoard = {...board};\r\n\t\t\t\t\t\ttempBoard.imageFile = e.target.files[0];\r\n\t\t\t\t\t\tsetBoard(tempBoard);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t*/}\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\tonClick={onSubmit}\r\n\t\t\t\t>\r\n\t\t\t\t\t글쓰기\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\tonClick={() => navigate(-1)}\r\n\t\t\t\t>\r\n\t\t\t\t\t취소\r\n\t\t\t\t</Button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default BoardWrite;","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\nimport Container from '@material-ui/core/Container';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Table from '@material-ui/core/Table';\r\n// import TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t  marginTop: theme.spacing(8),\r\n\t  display: 'flex',\r\n\t  flexDirection: 'column',\r\n\t  alignItems: 'center',\r\n\t},\r\n\tform: {\r\n\t  width: '100%', // Fix IE 11 issue.\r\n\t  marginTop: theme.spacing(1),\r\n\t},\r\n\tsubmit: {\r\n\t  margin: theme.spacing(0, 1.5, 0, 1.5),\r\n\t},\r\n  }));\r\n\r\nfunction BoardContent() {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <Container component=\"main\" maxWidth=\"md\">\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t<form className={classes.form} noValidate method='post'>\r\n                <Box border=\"1px solid #dfdfdf\" borderRadius=\"10px\" textAlign=\"left\" padding=\"5px\">제목</Box>\r\n                <Box display=\"flex\" flexDirection=\"row\">\r\n                    <Box border=\"1px solid #dfdfdf\" borderRadius=\"10px\" textAlign=\"left\" width=\"80%\" height=\"250px\" padding=\"5px\" marginTop=\"10px\">내용</Box>\r\n                    <Box m={1}/>\r\n                    <Box border=\"1px solid #dfdfdf\" borderRadius=\"10px\" textAlign=\"left\" width=\"20%\" height=\"250px\" padding=\"5px\" marginTop=\"10px\">이미지</Box>\r\n                </Box>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                        <TableRow>\r\n                            <TableCell>홍길동</TableCell>\r\n                                <TableCell>안녕하세요</TableCell>\r\n                                <TableCell>2020.09.17</TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>홍길동</TableCell>\r\n                                <TableCell>안녕하세요</TableCell>\r\n                                <TableCell>2020.09.17</TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\t\t\t\t<Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\" border=\"1px solid #dfdfdf\">\r\n                    <Box width=\"150px\">홍길동</Box>\r\n                    <Box marginLeft={1}/>\r\n                    <Box width=\"100%\"><TextField variant=\"outlined\" fullWidth size=\"small\"/></Box>\r\n                    <Box marginLeft={1}/>\r\n                    <Box width=\"150px\">\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            보내기\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n                <Box m={1}/>\r\n                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        수정\r\n                    </Button>\r\n                    <Button\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        삭제\r\n                    </Button>\r\n                </Box>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n    )\r\n}\r\n\r\nexport default BoardContent;","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\n\r\nexport const listItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"회원관리\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ShoppingCartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"상품관리\" />\r\n    </ListItem>\r\n  </div>\r\n);","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n//import TableFooter from '@material-ui/core/TableFooter';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\n\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\n//import { withStyles } from \"@material-ui/core/styles\";\r\n\r\n// const styles = {\r\n//   input1: {\r\n//     height: 50\r\n//   },\r\n//   input2: {\r\n//     height: 200,\r\n//     fontSize: \"3em\"\r\n//   }\r\n// };\r\n\r\n// const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\r\n\t\r\n// };\r\n\r\n// const handleChangeRowsPerPage = (event: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>) => {\r\n\t\r\n// };\r\n\r\nfunction BoardAdmin() {\r\n\tconst height = 30;\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst routeChange = (url: string) => {\r\n\t\tnavigate(url);\r\n\t}\r\n\r\n\tfunction onClickItem(num: number) {\r\n\t\trouteChange('/board_content/' + num);\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div style={{width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\r\n\t\t\t<div style={{width: '90%'}}>\r\n\t\t\t\t<TableContainer>\r\n\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">번호</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">이미지</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">상품명</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">작성자</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">날짜</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">동작</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t<TableRow style={{cursor: 'pointer'}} onClick={() => onClickItem(0)}>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">1</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\"></TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">아아</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">홍길동</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">2020.09.14</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">\r\n\t\t\t\t\t\t\t\t\t<Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" size=\"small\">댓글 관리</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Box m={0.2}/>\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" size=\"small\">삭제</Button>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</TableContainer>\r\n\t\t\t\t<Box m={2}/>\r\n\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\">\r\n\t\t\t\t\t<Box m={1}/>\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<Pagination count={11} defaultPage={1} siblingCount={0} variant=\"outlined\" color=\"primary\"/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box display=\"flex\">\r\n\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<CreateIcon/>} onClick={() => routeChange('/board_write')}>\r\n\t\t\t\t\t\t\t글쓰기\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Box m={1}/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box m={2}/>\r\n\t\t\t\t<Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" height=\"30px\">\r\n\t\t\t\t\t<TextField variant=\"outlined\" rows={1} placeholder=\"검색어를 입력해주세요\" InputProps={{style: {height, padding: '0 14px'}}}/>\r\n\t\t\t\t\t<Box m={1}/>\r\n\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" size=\"small\">검색</Button>\r\n\t\t\t\t</Box>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BoardAdmin;","import React from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport List from '@material-ui/core/List';\r\nimport { listItems } from './listItem';\r\n\r\n// import MemberBoard from './memberboard';\r\nimport BoardAdmin from './boardadmin';\r\n\r\nfunction Admin() {\r\n    return (\r\n        <Box width=\"100%\" display=\"flex\" flexDirection=\"row\">\r\n            <Box width=\"200px\"><List>{listItems}</List></Box>\r\n            {/*<Box width=\"80%\"><MemberBoard/></Box>*/}\r\n            <Box width=\"80%\"><BoardAdmin/></Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\nimport { Provider } from 'mobx-react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport Header from './header';\r\nimport Board from './board';\r\nimport BoardWrite from './board-write';\r\nimport BoardContent from './board-content';\r\n// import Chat from './chat';\r\nimport Admin from './admin/admin';\r\n\r\nimport globalStore from '../store/store';\r\n\r\nfunction Layout() {\r\n    return (\r\n        <>\r\n        <Provider globalStore={globalStore}>\r\n            <Header/>\r\n            <Routes>\r\n                <Route path='/board' element={<Board />}/>\r\n                <Route path='/board_write' element={<BoardWrite />}/>\r\n                <Route path='/board_content' element={<BoardContent />}/>\r\n                <Route path=\"/admin\" element={<Admin />}/>\r\n                <Route path='/' element={<Board />}/>\r\n            </Routes>\r\n            {/*<Chat/>*/}\r\n        </Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout;","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nimport AccountService from '../services/account-service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t  marginTop: theme.spacing(8),\r\n\t  display: 'flex',\r\n\t  flexDirection: 'column',\r\n\t  alignItems: 'center',\r\n\t},\r\n\tform: {\r\n\t  width: '100%', // Fix IE 11 issue.\r\n\t  marginTop: theme.spacing(1),\r\n\t},\r\n\tbutton: {\r\n\t  margin: theme.spacing(1.5, 0, 0),\r\n\t},\r\n  }));\r\n\r\nfunction Login() {\r\n\tconst navigate = useNavigate();\r\n\tconst classes = useStyles();\r\n\tconst [email, setEmail] = useState<string>('');\r\n\tconst [password, setPassword] = useState<string>('');\r\n\tconst [error, setError] = useState<string>('');\r\n\r\n\tasync function onSubmit() {\r\n\t\tconst accountService = new AccountService();\r\n\r\n\t\tif(email === '' || password === '') {\r\n\t\t\talert('입력되지 않은 정보가 있습니다.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst result = await accountService.login(email, password);\r\n\t\tif(result.type === 'success') {\r\n\t\t\tnavigate('/');\r\n\t\t}else{\r\n\t\t\tconsole.log(result);\r\n\t\t\tsetError(result['message']);\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t\t\t로그인을 해주세요.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<form className={classes.form} noValidate method='post'>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tlabel=\"이메일 주소\"\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\tsetEmail(e.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tlabel=\"비밀번호\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\tsetPassword(e.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button type=\"button\" fullWidth variant=\"contained\" color=\"primary\" className={classes.button} onClick={onSubmit}>로그인</Button>\r\n\t\t\t\t\t<Button type=\"button\" fullWidth variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => navigate('/register')}>회원가입</Button>\r\n\t\t\t\t\t{error !== '' && \r\n\t\t\t\t\t<Box color={'#FF0000'} padding={1}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\terror === 'email not exist' ? '이메일 주소가 일치하지 않습니다.' : \r\n\t\t\t\t\t\t\terror === 'password incorrect' ? '비밀번호가 일치하지 않습니다.' :\r\n\t\t\t\t\t\t\t'로그인 오류가 발생하였습니다.'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Container from '@material-ui/core/Container';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nimport AccountService from '../services/account-service';\r\nimport { User } from '../model/user';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t  marginTop: theme.spacing(8),\r\n\t  display: 'flex',\r\n\t  flexDirection: 'column',\r\n\t  alignItems: 'center',\r\n\t},\r\n\tform: {\r\n\t  width: '100%', // Fix IE 11 issue.\r\n\t  marginTop: theme.spacing(1),\r\n\t},\r\n\tbutton: {\r\n\t  margin: theme.spacing(1.5, 0, 0),\r\n\t},\r\n}));\r\n\r\nfunction Register() {\r\n\tconst navigate = useNavigate();\r\n\tconst classes = useStyles();\r\n\tconst [user, setUser] = useState<User>({email: '', name: '', password: '', adminlevel: 0});\r\n\tconst [passwordCheck, setPasswordCheck] = useState<string>('');\r\n\tconst [error, setError] = useState<boolean>(false);\r\n\r\n\tasync function onSubmit() {\r\n\t\tif(user.email === '' || user.name === '' || user.password === '') {\r\n\t\t\talert('입력되지 않은 정보가 있습니다.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(passwordCheck !== user.password) {\r\n\t\t\talert('비밀번호가 일치하지 않습니다.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst accountService = new AccountService();\r\n\t\tconst result = await accountService.register(user);\r\n\t\tif(result === 'success') {\r\n\t\t\tnavigate('/login');\r\n\t\t}else{\r\n\t\t\tsetError(true);\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t\t\t회원가입을 해주세요.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<form className={classes.form} noValidate method='post'>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tlabel=\"이메일 주소\"\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\tvalue={user.email}\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\tlet tempUser = {...user};\r\n\t\t\t\t\t\t\ttempUser.email = e.target.value;\r\n\t\t\t\t\t\t\tsetUser(tempUser);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tlabel=\"성명\"\r\n\t\t\t\t\t\tvalue={user.name}\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\tlet tempUser = {...user};\r\n\t\t\t\t\t\t\ttempUser.name = e.target.value;\r\n\t\t\t\t\t\t\tsetUser(tempUser);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tlabel=\"비밀번호\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tvalue={user.password}\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\tlet tempUser = {...user};\r\n\t\t\t\t\t\t\ttempUser.password = e.target.value;\r\n\t\t\t\t\t\t\tsetUser(tempUser);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tlabel=\"비밀번호 확인\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tvalue={passwordCheck}\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\tsetPasswordCheck(e.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button type=\"button\" fullWidth variant=\"contained\" color=\"primary\" className={classes.button} onClick={onSubmit}>회원가입</Button>\r\n\t\t\t\t\t<Button type=\"button\" fullWidth variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => navigate(-1)}>취소</Button>\r\n\t\t\t\t\t{error && \r\n\t\t\t\t\t<Box color={'#FF0000'} padding={1}>\r\n\t\t\t\t\t\t가입에 실패하였습니다.\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Register;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport { BrowserRouter, Routes,  Route } from 'react-router-dom';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Layout from './page/layout';\nimport Login from './page/login';\nimport Register from './page/register';\nimport config from './config';\nimport { responsiveFontSizes } from '@material-ui/core';\n\nfunction App() {\n  //console.log(\"test\",config.BACK_URL);\n  \n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/login\" element={<Login />}/>\n          <Route path=\"/register\" element={<Register />}/>\n          <Route path=\"/*\" element={<Layout />}/>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}